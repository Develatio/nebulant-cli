# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Go.gitlab-ci.yml

image: golang:1.21

variables:
  # Please edit to your GitLab project
  REPO_NAME: github.com/develatio/nebulant-cli
  BUILD_BRANCH: "nightly"
  DEPLOY_BUCKET: "nightly"

stages:
  - analysis
  - deploy

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME
  #
  - apt update > /dev/null && DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt install -y tzdata > /dev/null
  - apt install -y ca-certificates libcap2-bin curl bzip2 jq awscli gpg wget lsb-release unzip > /dev/null
  - wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
  - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
  - mkdir -p /etc/apt/keyrings
  - curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
  - echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list
  - apt update > /dev/null && apt install vault nodejs > /dev/null
  - >-
    echo "hosts: files dns" > /etc/nsswitch.conf
  - echo -e "-----BEGIN CERTIFICATE-----\nMIIEADCCAuigAwIBAgIID+rOSdTGfGcwDQYJKoZIhvcNAQELBQAwgYsxCzAJBgNV\nBAYTAlVTMRkwFwYDVQQKExBDbG91ZEZsYXJlLCBJbmMuMTQwMgYDVQQLEytDbG91\nZEZsYXJlIE9yaWdpbiBTU0wgQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRYwFAYDVQQH\nEw1TYW4gRnJhbmNpc2NvMRMwEQYDVQQIEwpDYWxpZm9ybmlhMB4XDTE5MDgyMzIx\nMDgwMFoXDTI5MDgxNTE3MDAwMFowgYsxCzAJBgNVBAYTAlVTMRkwFwYDVQQKExBD\nbG91ZEZsYXJlLCBJbmMuMTQwMgYDVQQLEytDbG91ZEZsYXJlIE9yaWdpbiBTU0wg\nQ2VydGlmaWNhdGUgQXV0aG9yaXR5MRYwFAYDVQQHEw1TYW4gRnJhbmNpc2NvMRMw\nEQYDVQQIEwpDYWxpZm9ybmlhMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\nAQEAwEiVZ/UoQpHmFsHvk5isBxRehukP8DG9JhFev3WZtG76WoTthvLJFRKFCHXm\nV6Z5/66Z4S09mgsUuFwvJzMnE6Ej6yIsYNCb9r9QORa8BdhrkNn6kdTly3mdnykb\nOomnwbUfLlExVgNdlP0XoRoeMwbQ4598foiHblO2B/LKuNfJzAMfS7oZe34b+vLB\nyrP/1bgCSLdc1AxQc1AC0EsQQhgcyTJNgnG4va1c7ogPlwKyhbDyZ4e59N5lbYPJ\nSmXI/cAe3jXj1FBLJZkwnoDKe0v13xeF+nF32smSH0qB7aJX2tBMW4TWtFPmzs5I\nlwrFSySWAdwYdgxw180yKU0dvwIDAQABo2YwZDAOBgNVHQ8BAf8EBAMCAQYwEgYD\nVR0TAQH/BAgwBgEB/wIBAjAdBgNVHQ4EFgQUJOhTV118NECHqeuU27rhFnj8KaQw\nHwYDVR0jBBgwFoAUJOhTV118NECHqeuU27rhFnj8KaQwDQYJKoZIhvcNAQELBQAD\nggEBAHwOf9Ur1l0Ar5vFE6PNrZWrDfQIMyEfdgSKofCdTckbqXNTiXdgbHs+TWoQ\nwAB0pfJDAHJDXOTCWRyTeXOseeOi5Btj5CnEuw3P0oXqdqevM1/+uWp0CM35zgZ8\nVD4aITxity0djzE6Qnx3Syzz+ZkoBgTnNum7d9A66/V636x4vTeqbZFBr9erJzgz\nhhurjcoacvRNhnjtDRM0dPeiCJ50CP3wEYuvUzDHUaowOsnLCjQIkWbR7Ni6KEIk\nMOz2U0OBSif3FTkhCgZWQKOOLo1P42jHC3ssUZAtVNXrCk3fw9/E15k8NPkBazZ6\n0iykLhH1trywrKRMVw67F44IE8Y=\n-----END CERTIFICATE-----" > /usr/local/share/ca-certificates/cloudflare.crt
  - update-ca-certificates
  - setcap cap_ipc_lock= /usr/bin/vault


# unittest:
#   stage: analysis
#   tags:
#     - local
#   script:
#     - make cover

#   rules:
#     - if: $CI_COMMIT_MESSAGE =~ /skip[-_]all/
#       when: never
#     - if: $CI_COMMIT_MESSAGE =~ /skip[-_]unittest/
#       when: never
#     - if: $CI_COMMIT_MESSAGE =~ /Merge tag \'[\w.]+\' into develop/
#       when: never
#     - if: '$CI_COMMIT_BRANCH == "develop"'
#       when: on_success
#     - if: '$CI_COMMIT_BRANCH == "master"'
#       when: on_success
#     - when: never

autotest:
  stage: analysis
  tags:
    - local
  script:
    - make builddebug
    - echo $BLUEPRINT >/tmp/blueprint.json
    - ./dist/nebulant-debug run /tmp/blueprint.json
  # coverage: '/Code coverage: \d+(?:\.\d+)?/'
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /skip[-_]all/
      when: never
    - if: $CI_COMMIT_MESSAGE =~ /skip[-_]self/
      when: never
    - if: $CI_COMMIT_MESSAGE =~ /Merge tag \'[\w.]+\' into develop/
      when: never
    - if: '$CI_COMMIT_BRANCH == "develop"'
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
    - when: never

gobuild_and_r2upload:
  stage: deploy
  tags:
    - local
  script:
    - echo "build for ${BUILD_BRANCH} - ${DEPLOY_BUCKET}"  
    - make buildall
    - cp dist/*.*.*/nebulant-linux-amd64 ./nebulant
    - export CLOUDFLARE_ACCOUNT_ID=$(vault kv get -field="accountid" secret/Nebulant/Dev/Cloudflare/API/nebulant.dev)
    - export CLOUDFLARE_ACCESS_KEY_ID=$(vault kv get -field="Builder assets generator access key id" secret/Develatio/Dev/Cloudflare/API/api-tokens)
    - export CLOUDFLARE_SECRET_ACCESS_KEY=$(vault kv get -field="Builder assets generator secret access key" secret/Develatio/Dev/Cloudflare/API/api-tokens)
    - export BUCKET=nebulant-dev-assets
    - ./nebulant -x run ./r2upload.nbp --SOURCEPATH=./dist/ --DSTPATH=/releases/ --BUCKET=${DEPLOY_BUCKET}
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG =~ /v\d\.\d.\d$/
      variables:
        BUILD_BRANCH: "release"
        DEPLOY_BUCKET: "releases.nebulant.io"
    - if: $CI_COMMIT_TAG && $CI_COMMIT_BRANCH == "develop" && $CI_COMMIT_TAG =~ /v\d\.\d.\d-rc.$/
      variables:
        BUILD_BRANCH: "pre-release"
        DEPLOY_BUCKET: "releases.nebulant.dev"
    - if: $CI_COMMIT_BRANCH == "develop"
      when: manual

# r2upload:
#   stage: deploy
#   tags:
#     - local
#   script:
#     - echo "deploy for ${BUILD_BRANCH} ${DEPLOY_BUCKET}"
#     - ls
#     - ls -R dist/
#   needs:
#     job: gobuild
#     artifacts: true
#   rules:
#     - if: $CI_COMMIT_TAG && $CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG =~ /v\d\.\d.\d$/
#       when: manual
#     - if: $CI_COMMIT_TAG && $CI_COMMIT_BRANCH == "develop" && $CI_COMMIT_TAG =~ /v\d\.\d.\d-rc.$/
#       when: manual
#     - if: $CI_COMMIT_TAG && $CI_COMMIT_BRANCH == "develop"
#       when: manual

# compile:
#   stage: build
#   script:
#     - make build
#   artifacts:
#     paths:
#       - bin
