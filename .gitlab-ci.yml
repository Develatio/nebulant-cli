# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Go.gitlab-ci.yml

image: golang:1.21

variables:
  # Please edit to your GitLab project
  REPO_NAME: github.com/develatio/nebulant-cli
  BUILD_BRANCH: "nightly"
  DEPLOY_BUCKET: "nightly"

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - analysis
  - build
  - deploy

# unittest:
#   stage: analysis
#   tags:
#     - local
#   script:
#     - make cover

#   rules:
#     - if: $CI_COMMIT_MESSAGE =~ /skip[-_]all/
#       when: never
#     - if: $CI_COMMIT_MESSAGE =~ /skip[-_]unittest/
#       when: never
#     - if: $CI_COMMIT_MESSAGE =~ /Merge tag \'[\w.]+\' into develop/
#       when: never
#     - if: '$CI_COMMIT_BRANCH == "develop"'
#       when: on_success
#     - if: '$CI_COMMIT_BRANCH == "master"'
#       when: on_success
#     - when: never

autotest:
  stage: analysis
  tags:
    - local
  script:
    - make builddebug
    - echo $BLUEPRINT >/tmp/blueprint.json
    - ./dist/nebulant-debug run /tmp/blueprint.json

  rules:
    - if: $CI_COMMIT_MESSAGE =~ /skip[-_]all/
      when: never
    - if: $CI_COMMIT_MESSAGE =~ /skip[-_]self/
      when: never
    - if: $CI_COMMIT_MESSAGE =~ /Merge tag \'[\w.]+\' into develop/
      when: never
    - if: '$CI_COMMIT_BRANCH == "develop"'
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
    - when: never

gobuild:
  stage: build
  tags:
    - local
  script:
    - echo "build for ${BUILD_BRANCH} ${DEPLOY_BUCKET}"
    - make buildall
  artifacts:
    paths:
      - dist/
    expire_in: 1 week
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG =~ /v\d\.\d.\d$/
      variables:
        BUILD_BRANCH: "release"
        DEPLOY_BUCKET: "releases.nebulant.io"
    - if: $CI_COMMIT_TAG && $CI_COMMIT_BRANCH == "develop" && $CI_COMMIT_TAG =~ /v\d\.\d.\d-rc.$/
      variables:
        BUILD_BRANCH: "pre-release"
        DEPLOY_BUCKET: "releases.nebulant.dev"
    - if: $CI_COMMIT_BRANCH == "develop"
      when: manual

r2upload:
  stage: deploy
  tags:
    - local
  script:
    - echo "deploy for ${BUILD_BRANCH} ${DEPLOY_BUCKET}"
    - ls
    - ls -R dist/
  needs:
    job: gobuild
    artifacts: true
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG =~ /v\d\.\d.\d$/
      when: manual
    - if: $CI_COMMIT_TAG && $CI_COMMIT_BRANCH == "develop" && $CI_COMMIT_TAG =~ /v\d\.\d.\d-rc.$/
      when: manual
    - if: $CI_COMMIT_TAG && $CI_COMMIT_BRANCH == "develop"
      when: manual

# compile:
#   stage: build
#   script:
#     - make build
#   artifacts:
#     paths:
#       - bin
